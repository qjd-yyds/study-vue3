{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProp.ts","../../reativity/src/effect.ts","../../reativity/src/baseHandlers.ts","../../reativity/src/reative.ts","../../reativity/src/ref.ts","../../reativity/src/computed.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/render.ts","../../runtime-core/src/h.ts","../src/index.ts"],"sourcesContent":["// 判断是否对象\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\n// 合并对象\nexport const extend = Object.assign;\n\nexport const isArray = Array.isArray;\n\nexport const isFunction = (val) => typeof val === 'function';\n\nexport const isString = (val) => typeof val === 'string';\nexport const isNumber = (val) => typeof val === 'number';\n\n// 判断是否存在属性\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (val: object, key: string | symbol): key is keyof typeof val => hasOwnProperty.call(val, key);\n\n// 判断数组的key是不是整数\nexport const isIntegerKey = (key) => isString(key) && key !== 'NaN' && key[0] !== '-' && '' + parseInt(key, 10) === key;\n\n// 判断两个值是否相同\nexport const hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n\nexport * from './shapeFlags';\n","// 操作节点增删改插\nconst doc = (typeof document !== 'undefined' ? document : null) as Document;\nexport const svgNS = 'http://www.w3.org/2000/svg';\nexport const nodeOps = {\n  // 创建元素createElement\n  createElement: (tag, isSVG, is, props): Element => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : undefined);\n\n    if (tag === 'select' && props && props.multiple != null) {\n      (el as HTMLSelectElement).setAttribute('multiple', props.multiple);\n    }\n\n    return el;\n  },\n  // 删除一个元素\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  // 插入\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null); // appendchild\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  // 选择\n  querySelector: (selector) => doc.querySelector(selector),\n  // ==>创建节点文本\n  createText: (text) => doc.createTextNode(text),\n  // 设置文本节点\n  setText: (node, text) => {\n    node.nodeValue = text;\n  }\n};\n","/**\n * @description: 自定义属性\n * @param {*} el 目标元素\n * @param {*} el 属性\n * @param {*} value 设置的值\n */\nexport const patchAttr = (el: Element, key, value) => {\n  if (value == null) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n};\n","/**\n * @description: 处理class\n * @param {Element} el 目标元素\n * @param {*} value class的类名\n * @return {*}\n */\nexport const patchClass = (el: Element, value) => {\n  if (value == null) {\n    value = '';\n  }\n  // 对标签的class赋值，如果有新的覆盖\n  el.className = value;\n};\n","export const PatchEvent = (el, key, nextValue) => {\n  // 1.函数缓存\n  const invokers = el._vei || (el._vei = {});\n  const exists = invokers[key];\n  if (nextValue && exists) {\n    // 原来有\n    exists.value = nextValue;\n  } else {\n    // 事件名字\n    const eventName = key.slice(2).toLowerCase();\n    if (nextValue) {\n      // 1.新的有\n      let invoker = (invokers[eventName] = createInvoker(nextValue));\n      el.addEventListener(eventName, invoker);\n    } else {\n      // 2.新的没有\n      el.removeEventListener(eventName, exists);\n      invokers[eventName] = undefined;\n    }\n  }\n};\n\nfunction createInvoker(value) {\n  const invoker = (e) => {\n    invoker.value(e);\n  };\n  invoker.value = value;\n  return invoker;\n}\n\n// 事件处理\n// 1.给元素缓存一个绑定事件的列表\n// 2.如果缓存中没有，但是value有值，绑定事件并且缓存当前事件\n// 3.以前绑定过，删除缓存，讲value缓存\n// 4.两个都有，直接改变invoker里的value\n","/**\n * @description: style的处理\n * @param {*} el 目标元素\n * @param {*} prev 之前的值\n * @param {*} next 修改的值\n */\nexport const patchStyle = (el: Element, prev, next) => {\n  const style = (el as HTMLElement).style;\n  if (next == null) {\n    // 删除\n    el.removeAttribute('style');\n  } else {\n    // 老的有，新的没有\n    if (prev) {\n      for (let key in prev) {\n        if (next[key] == null) {\n          style[key] = '';\n        }\n      }\n    }\n    // 老的没有，新的有\n    for (let key in next) {\n      style[key] = next[key];\n    }\n  }\n};\n","// 属性操作 ，策略模式\nimport { patchAttr } from './modules/attr';\nimport { patchClass } from './modules/class';\nimport { PatchEvent } from './modules/event';\nimport { patchStyle } from './modules/style';\nexport function patchProp(el, key, prevValue, nextValue) {\n  switch (key) {\n    case 'class':\n      patchClass(el, nextValue);\n      break;\n    case 'style':\n      patchStyle(el, prevValue, nextValue);\n      break;\n    default:\n      // 判断是不是事件\n      if (/^on[^a-z]/.test(key)) {\n        // 事件\n        PatchEvent(el, key, nextValue);\n      } else {\n        // 否则为属性\n        patchAttr(el, key, nextValue);\n      }\n\n      break;\n  }\n}\n","import { isArray, isIntegerKey } from '@vue/shared';\nimport { TriggerOpTypes } from './operations';\n\nexport function effect(fn, options: any = {}) {\n  const effect = createReactiveEffect(fn, options);\n  // 判断options\n  if (!options.lazy) {\n    console.log('用户没有传递lazy，立即执行一次');\n    effect(); // 默认执行\n  }\n  return effect;\n}\nlet uid = 0; // 记录effect的下标\nlet activeEffect; // 保存当前的effect\nconst effectTrack = []; // 定义一个栈解决嵌套树型结构effect，为了解决当前effect是哪一个\n/*\n[effect1,effect2,effect3]]\neffect(() => {\n  state.name\n  effect(() => {\n    state.age\n    effect(() => {\n      state.a\n    })\n  })\n\n})\n*/\nfunction createReactiveEffect(fn, options) {\n  const effect = function reativeEffect() {\n    if (!effectTrack.includes(effect)) {\n      // 当前创建的effect不存在栈中,创建effect\n      // 没有入栈当前的effect\n      try {\n        // 入栈\n        effectTrack.push(effect);\n        activeEffect = effect;\n        // 响应式effect\n        return fn(); // 执行用户的方法\n      } finally {\n        // 无论是否成功，都执行\n        // 出栈\n        effectTrack.pop();\n        activeEffect = effectTrack[effectTrack.length - 1];\n      }\n    }\n  };\n  effect.id = uid++; // 区别effect\n  effect._isEffect = true; // 区分是否响应\n  effect.raw = fn; // 保存用户方法\n  effect.options = options; // 保存用户配置\n  return effect;\n}\n\n// 收集effect，获取数据的时候触发get 收集effect\nlet targetMap = new WeakMap(); // 创建表\nexport function Track(target, type, key) {\n  console.log('触发收集', '被收集的target==>', target, '被收集的key==>', key);\n  // 1.name ==> effect\n  // key和effect一一对应\n  if (typeof activeEffect === 'undefined') {\n    // 当前对象没有的在effect函数中使用\n    return;\n  }\n  // key===target==属性==>Set[effect,effect]\n  let depMap = targetMap.get(target); //\n  if (!depMap) {\n    targetMap.set(target, (depMap = new Map())); // 添加值\n  }\n  // 当前key\n  let dep = depMap.get(key);\n  // 判断key是否存在，不存在就创建一个set\n  if (!dep) {\n    depMap.set(key, (dep = new Set()));\n  }\n  // 如果当前set不存在当前effect，\n  if (!dep.has(activeEffect)) {\n    // 收集effect，并添加进去\n    dep.add(activeEffect);\n  }\n  console.log('依赖收集完成，当前创建的依赖weakmap==>', targetMap);\n}\n\n// 触发依赖\n// 1.处理对象\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n  // 触发更新\n  const depsMap = targetMap.get(target);\n  // 判断目标对象有没有被收集==> 不是响应的\n  if (!depsMap) return;\n  const effectSet = new Set();\n  // 性能优化如果有多个同时修改一个值，相同就过滤\n  const add = (effectAdd) => {\n    if (effectAdd) {\n      effectAdd.forEach((effect) => {\n        effectSet.add(effect);\n      });\n    }\n  };\n  // 修改数组长度，数组特殊处理\n  if (key === 'length' && isArray(target)) {\n    // proxy在添加数组的时候默认会讲length等属性加入\n    // 在effect中length也被添加依赖\n    // 当用户修改长度，或者修改的下标小于所有数组的下标\n    // 将length和下标的effect放入dep中\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key >= newValue) {\n        add(dep);\n      }\n    });\n  } else {\n    // 可能是对象\n    if (key !== undefined) {\n      // 获取当前key下的effect\n      add(depsMap.get(key));\n    }\n    switch (type) {\n      // 如果是新增属性\n      case TriggerOpTypes.ADD:\n        if (isArray(target) && isIntegerKey(key)) {\n          // 如果是个数组且key为整数，就将length的effect加入依赖\n          add(depsMap.get('length'));\n        }\n    }\n  }\n  // 触发effect方法\n  effectSet.forEach((effect: any) => {\n    if (effect.options.scheduler) {\n      // 当前scheduler存在，effect为computed,effect的副作用放在get里\n      effect.options.scheduler();\n    } else {\n      effect();\n    }\n  });\n  // 执行\n}\n","import { hasChanged, hasOwn, isArray, isIntegerKey, isObject } from '@vue/shared';\nimport { Track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOpTypes } from './operations';\nimport { readonly, reative } from './reative';\n// 处理get\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target, key, receiver) {\n    const res = Reflect.get(target, key, receiver); // target[key]\n    // 不是只读\n    if (!isReadonly) {\n      // 收集依赖effect,目标对象的key采用的操作get\n      Track(target, TrackOpTypes.GET, key);\n    }\n    // 浅\n    if (shallow) {\n      return res;\n    }\n    // key是一个对象,递归，懒代理，即当访问下一层对象才开始进行拦截，必须被使用\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reative(res);\n    }\n    return res;\n  };\n}\n\n// 柯里化，根据不同参数处理逻辑\n// 处理get\nconst get = /*#__PURE__*/ createGetter(); // 深度非只读\nconst shallowGet = /*#__PURE__*/ createGetter(false, true); // 非只读 浅\nconst readonlyGet = /*#__PURE__*/ createGetter(true); // 只读 深度\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true); // 只读 浅\n\n// 处理set,是否浅\nfunction createSetter(shallow = false) {\n  return function set(target, key, value, receiver) {\n    // 存储旧值\n    const oldValue = target[key];\n    // 设置的是数组还是对象，添加值还是修改\n    // 判断是否是数组，proxy的key就是数组的索引，如果key大于length表示新增false,小于表示修改true\n    // 如果是对象，如果存在属性就是修改true，不存在就是新增属性flase\n    let hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n\n    const result = Reflect.set(target, key, value, receiver);\n    if (!hadKey) {\n      // 没有，触发新增数据\n      console.log('当前值为新增，触发set新增==>', key);\n      // 新增 key操作的属性 value 新值\n      trigger(target, TriggerOpTypes.ADD, key, value);\n    } else {\n      // 有，修改值\n      // 如果新值和旧值不相同\n      if (hasChanged(value, oldValue)) {\n        console.log('当前值为修改，触发set修改');\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue);\n      }\n    }\n    return result;\n  };\n}\nconst set = /*#__PURE__*/ createSetter();\nconst shallowSet = /*#__PURE__*/ createSetter(true);\n// 全部代理\nexport const reativeHandlers = {\n  get,\n  set\n};\n// 数据第一层代理\nexport const shallowReactiveHandlers = {\n  get: shallowGet,\n  set: shallowSet\n};\n// 全部只读\nexport const readonlyHandlers = {\n  get: readonlyGet,\n  set: (target, key, value) => {\n    console.error('不可以修改key，只读全部');\n  }\n};\n// 第一层只读\nexport const shallowReativeHandlers = {\n  get: shallowReadonlyGet,\n  set: (target, key, value) => {\n    console.error('不可以修改key只读一层');\n  }\n};\n","import { isObject } from '@vue/shared';\nimport { reativeHandlers, shallowReactiveHandlers, readonlyHandlers, shallowReativeHandlers } from './baseHandlers';\nexport function reative(target) {\n  return createReativeObj(target, false, reativeHandlers);\n}\nexport function shallowReactive(target) {\n  return createReativeObj(target, false, shallowReactiveHandlers);\n}\nexport function readonly(target) {\n  return createReativeObj(target, true, readonlyHandlers);\n}\nexport function shallowReative(target) {\n  return createReativeObj(target, true, shallowReativeHandlers);\n}\n\n// 核心是proxy 采用柯里化根据不同参数处理\n// 创建一个表来存储当前代理的对象\nconst reativeMap = new WeakMap(); // key必须为一个对象 自动垃圾回收\nconst readOnlyMap = new WeakMap(); // key必须为一个对象 自动垃圾回收\n// 创建reative对象，返回一个proxy\nfunction createReativeObj(target, isReadonly, baseHandlers) {\n  if (!isObject(target)) {\n    console.error(\"必须为一个对象\")\n    return target;\n  }\n  console.log('reative传入的值=>', target);\n  // 通过是否只读来创建不同map\n  const proxyMap = isReadonly ? readOnlyMap : reativeMap;\n  const proxyEs = proxyMap.get(target);\n  // 如果已经创建过，就返回已经创建的代理\n  if (proxyEs) {\n    return proxyEs;\n  }\n  // 如果没有，将代理存入表中，并返回\n  const proxy = new Proxy(target, baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\n","import { hasChanged, isArray } from '@vue/shared';\nimport { Track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOpTypes } from './operations';\n\nexport function ref(target) {\n  return createRef(target);\n}\nexport function shallowRef(target) {\n  // 浅，如果是一个对象\n  return createRef(target, true);\n}\n// 创建类RefImpl\nclass RefImpl {\n  public __v_isRef = true; // 标识ref代理\n  public _value;\n  constructor(public rawValue, public shallow) {\n    this._value = rawValue; // 原来的值\n  }\n  // 类的属性访问器,收集依赖track\n  get value() {\n    Track(this, TrackOpTypes.GET, 'value');\n    return this._value;\n  }\n  set value(newValue) {\n    // 修改，触发依赖\n    if (hasChanged(newValue, this._value)) {\n      this._value = newValue;\n      this.rawValue = newValue;\n      console.log('触发set--value');\n      trigger(this, TriggerOpTypes.SET, 'value', newValue);\n    }\n  }\n}\n/**\n * @description: 创建ref，返回实例对象\n * @param {*} rawValue\n * @param {Boolean} shallow\n * @return {Object} RefImpl\n */\nfunction createRef(rawValue, shallow = false) {\n  // 创建ref，返回实例对象\n  return new RefImpl(rawValue, shallow);\n}\n/**\n * @description: 目标对象如果是响应式，返回的属性是响应的，如果是普通的就是普通的\n * @param {Object} target\n * @param {String} key\n * @return {ObjectRefImpl} ObjectRefImpl\n */\nexport function toRef(target, key) {\n  return new ObjectRefImpl(target, key);\n}\n/**\n * @description: toref返回的值，本质是通过模拟value 触发reative的get和set\n * @param {Object} target\n * @param {String} key\n */\nclass ObjectRefImpl {\n  public __v_isRef = true; // 标识ref代理\n  constructor(public target, public key) {}\n  get value() {\n    return this.target[this.key];\n  }\n  set value(newValue) {\n    this.target[this.key] = newValue;\n  }\n}\n/**\n * @description: reative的所有值变成ObjectRefImpl实例\n * @param {object} reative\n * @return {object} Record<string,ObjectRefImpl>\n */\nexport function toRefs(target) {\n  // 遍历当前对象\n  // 如果是数组 new Array\n  let ret = isArray(target) ? new Array(target.length) : {};\n  for (let key in target) {\n    // 将对象变成toref\n    ret[key] = toRef(target, key);\n  }\n  return ret;\n}\n","import { isFunction } from '@vue/shared';\nimport { effect } from '.';\n\n// 计算属性\nexport function computed(getterOrOptions) {\n  // 1.函数 2.对象\n  // 获取数据\n  let getter; // 获取\n  let setter; // 设置\n  if (isFunction(getterOrOptions)) {\n    getter = getterOrOptions;\n    setter = () => {\n      console.warn('computed value must be readonly');\n    };\n  } else {\n    // {get(),set()}\n    // 对象\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  return new ComputedRefImpl(getter, setter);\n}\n\nclass ComputedRefImpl {\n  public _dirty = true; // 默认获取执行\n  public _value;\n  public effect;\n  constructor(getter, public setter) {\n    // 当创建一个computed的时候，就当前的getter作为effect的回调函数\n    // 并且将effect存到自己的effect\n    this.effect = effect(getter, {\n      lazy: true,\n      scheduler: () => {\n        // 当修改数据的时候执行\n        if (!this._dirty) {\n          this._dirty = true;\n        }\n      }\n    });\n  }\n  // 通过.value\n  get value() {\n    // 当获取xxx.value的时候，执行effect函数，吧effect执行后的数据放在_value,并返回这个数据\n    // 如果当前dirty为false，代表当前依赖响应未发生变化，从缓存拿值\n    if (this._dirty) {\n      console.log('进入缓存判断，当前dirty为true，执行effect');\n      this._dirty = false; // 变更为false\n      this._value = this.effect(); // 获取用户的值，只要数据被改变\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    this.setter(newValue);\n  }\n}\n","import { isString, ShapeFlags, isObject, isFunction, isArray } from '@vue/shared';\n\n/**\n * @description: 作用和h函数一样，创建vnode\n * @param {*} type 类型\n * @param {*} props 属性\n * @param {*} childen 插槽\n * @return { vnode } vnode\n */\n// h('div',{},[])\nexport function creatVnode(\n  type,\n  props,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false\n) {\n  // 区分组件的虚拟dom还是普通元素\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : isObject(type)\n    ? ShapeFlags.STATEFUL_COMPONENT\n    : isFunction(type)\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\n    : 0;\n  const vnode = {\n    _v_isVnode: true,\n    type,\n    props,\n    children,\n    key: props && props.key, // diff算法\n    el: null, // 和真实元素和dom对应\n    component: null,\n    shapeFlag // 判断类型\n  };\n  // children\n  normalizeChildren(vnode, children);\n  return vnode;\n}\n\nexport function normalizeChildren(vnode, children) {\n  let type = 0;\n  if (children == null) {\n    return;\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN;\n  } else {\n    type = ShapeFlags.TEXT_CHILDREN;\n  }\n  vnode.shapeFlag = vnode.shapeFlag | type;\n}\n\n// 判断是否是vnode\nexport function isVnode(vnode) {\n  return vnode._v_isVnode;\n}\nexport const TEXT = Symbol('text');\n// 元素的children 变成vnode\nexport function CVnode(child) {\n  // ['text'],[h()]\n  if (isObject(child)) {\n    return child;\n  }\n  return creatVnode(TEXT, null, String(child));\n}\n","import { creatVnode } from './vnode';\n\n/**\n * @description: 创建vnode\n * @param {*} render\n * @return {*}\n */\nexport function ApiCreateApp(render) {\n  return function creatApp(rootcomponent, rootProps) {\n    const app = {\n      _component: rootcomponent,\n      _props: rootProps,\n      _container: null,\n      mount(container) {\n        // 创建vnode\n        let vnode = creatVnode(rootcomponent, rootProps);\n        // 渲染\n        render(vnode, container);\n      }\n    };\n    return app;\n  };\n}\n","import { hasOwn } from '@vue/shared';\n\nexport const componentPublicInstance = {\n  get({ _: instance }, key) {\n    const { props, setupState, data } = instance;\n    if (key[0] === '$') {\n      // $开头的不能获取\n      return;\n    }\n    if (hasOwn(props, key)) {\n      return props[key];\n    } else if (hasOwn(setupState, key)) {\n      return setupState[key];\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { props, setupState, data } = instance;\n    if (hasOwn(props, key)) {\n      props[key] = value;\n    } else if (hasOwn(setupState, key)) {\n      setupState[key] = value;\n    }\n  }\n};\n","import { isFunction, isObject, ShapeFlags } from '@vue/shared';\nimport { componentPublicInstance } from './componentPublicInstance';\n// 创建组件实例\nexport const createComponentInstance = (vnode) => {\n  const instance = {\n    vnode,\n    type: vnode.type, // 组件的类型,用户自己写的\n    props: {},\n    attrs: {},\n    data: { a: 1 },\n    render: false,\n    setupState: {}, // setup入口函数的状态\n    ctx: {}, // 代理\n    proxy: {},\n    isMounted: false // 是否挂载\n  };\n  instance.ctx = {\n    _: instance\n  };\n  return instance;\n};\n\n// 解析数据到组件实例\nexport const setupComponent = (instance) => {\n  // 设置值\n  const { props, children } = instance.vnode;\n  instance.props = props;\n  instance.children = children;\n  let isStateFul = instance.vnode.shapeFlag && ShapeFlags.STATEFUL_COMPONENT;\n  if (isStateFul) {\n    // 有的话就是有状态的组件\n    setupStateComponent(instance);\n  }\n};\n// 执行setup\nfunction setupStateComponent(instance) {\n  instance.proxy = new Proxy(instance.ctx, componentPublicInstance as any);\n  // setup的返回值，变成render函数的参数this\n  // 获取组件的类型\n  let component = instance.type;\n  let { setup } = component;\n  // 判断组件有没有setup\n  if (setup) {\n    const setupContext = createContext(instance);\n    let setupResult = setup(instance.props, setupContext);\n    // 返回值对象，函数\n    handleSetupResult(instance, setupResult); // 如果是对象，将值放入实例上的setupState，如果函数就是render\n  } else {\n    // setup没有，调用render\n    finishComponentSetup(instance);\n  }\n\n  // component.render(instance.proxy);\n}\n// 处理setup的返回结果\nfunction handleSetupResult(instance, setupResult) {\n  if (isFunction(setupResult)) {\n    instance.render = setupResult; // 将setup返回的函数保存到实例上\n    // 函数\n  } else if (isObject(setupResult)) {\n    instance.setupState = setupResult;\n  }\n  // 最终去执行render\n  finishComponentSetup(instance);\n}\n// 处理render\nfunction finishComponentSetup(instance) {\n  let component = instance.type;\n  // 判断setup是否有render\n  if(!instance.render) {\n    // 没有render\n    // 进行模版编译\n    if(!component.render && component.template) {\n      // 模版变 ==>render\n    }\n    // 将实例上的setup放入render里\n    instance.render = component.render;\n  }\n}\n// 创建上下文 ctx\nfunction createContext(instance) {\n  return {\n    attrs: instance.attrs,\n    slot: instance.slots,\n    emit: () => {},\n    expose: () => {}\n  };\n}","import { effect } from '@vue/reativity';\nimport { ShapeFlags } from '@vue/shared';\nimport { ApiCreateApp } from './apiCreateApp';\nimport { createComponentInstance, setupComponent } from './component';\nimport { CVnode, TEXT } from './vnode';\n/**\n * @description: 平台判断，创建渲染器\n * @return {Function} createApp 挂载函数\n */\nexport function createRenderer(rendererOptions) {\n  // 获取全部的dom操作\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    setText: hostSetText,\n    setElementText: hostSetElementText\n  } = rendererOptions;\n  // 给setup创建effect\n  function setupRenderEffect(instance, container) {\n    // 每次数据变化重新执行render\n    effect(function componentEffect() {\n      console.log('effect');\n      // 判断是不是第一次加载\n      if (!instance.isMounted) {\n        // 获取render的返回值\n        const proxy = instance.proxy;\n        // 执行render方法获取vnode\n        let subTree = (instance.subTree = instance.render.call(proxy, proxy));\n        console.log('subTree', subTree);\n        // 渲染子树 创建元素\n        patch(null, subTree, container);\n        instance.isMounted = true;\n      } else {\n        // 更新\n        console.log('更新');\n        const proxy = instance.proxy;\n        // 对吧旧的值和新的值\n        const prevTree = instance.subTree;\n        const nextTree = instance.render.call(proxy, proxy);\n        instance.subTree = nextTree;\n        patch(prevTree, nextTree, container);\n      }\n    });\n  }\n  // ------------------处理组件\n  const mountComponent = (initialVNode, container) => {\n    // 组件初始化流程\n    // 1.先有一个组件的对象render（proxy）\n    const instance = (initialVNode.component = createComponentInstance(initialVNode));\n    // 2.解析数据到实例对象\n    setupComponent(instance);\n    // 3.创建effect让render执行\n    setupRenderEffect(instance, container);\n  };\n  // 组件创建\n  const processComponent = (n1, n2, container) => {\n    if (n1 == null) {\n      // 第一次或者重新加载\n      mountComponent(n2, container);\n    } else {\n      // 同一个元素\n      console.log('同一个组件比对');\n    }\n  };\n  // ----------------------处理文本\n  function processText(n1, n2, container) {\n    if (n1 == null) {\n      hostInsert(hostCreateText(n2.children), container);\n    } else {\n      // 更新\n    }\n  }\n  //  -------------------处理元素\n  // 加载元素\n  function mountChildren(el, children) {\n    for (let i = 0; i < children.length; i++) {\n      let child = CVnode(children[i]);\n      // 创建文本元素\n      patch(null, child, el);\n    }\n  }\n  function mountedElement(vnode, container) {\n    // 创建元素\n    // h('div',{},[h('div')])\n    // 递归渲染变成真实dom\n    const { props, shapeFlag, type, children } = vnode;\n    // 创建元素\n    let el = hostCreateElement(type);\n    vnode.el = el; // 保存当前真实dom\n    // 添加属性\n    if (props) {\n      for (let key in props) {\n        hostPatchProp(el, key, null, props[key]);\n      }\n    }\n    // 处理children// h('div',{style:{color:'red'}},'text')\n    // 处理children// h('div',{style:{color:'red'}},['text'])\n    // 处理children// h('div',{style:{color:'red'}},[h()])\n    if (children) {\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n        // 文本，创建文本元素\n        hostSetElementText(el, children);\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        // 递归 patch 要求：是一个虚拟dom\n        mountChildren(el, children);\n      }\n    }\n    // 放到对应的位置\n    hostInsert(el, container);\n  }\n  // 属性比对\n  const patchProps = (el, oldProps, newProps) => {\n    // 旧的有属性，新的没有这个属性\n    // 循环\n    if (oldProps != newProps) {\n      for (let key in newProps) {\n        const prev = oldProps[key]; // 旧属性\n        const next = newProps[key]; // 旧属性\n        if (prev != next) {\n          // 不相同的就执行替换\n          console.log('当前替换的属性==>', key, '被替换的值', prev, '==>', next);\n          hostPatchProp(el, key, prev, next);\n        }\n      }\n    }\n    // 如果旧的属性不在新的属性里，直接删除\n    for (let key in oldProps) {\n      if (!(key in newProps)) {\n        console.log('被删除的属性key==>', key, '被删除的属性值value', oldProps[key]);\n        hostPatchProp(el, key, oldProps[key], null);\n      }\n    }\n  };\n  // 同一个元素比对\n  const patchElement = (n1, n2, container) => {\n    // 属性比对style class\n    let el = (n2.el = n1.el); // 获取真实的节点\n    const oldProps = n1.props || {};\n    const newProps = n2.props || {};\n    patchProps(el, oldProps, newProps); // 处理属性\n  };\n  function processeElement(n1, n2, container) {\n    if (n1 == null) {\n      // 创建\n      mountedElement(n2, container);\n    } else {\n      // 更新\n      console.log('同一个元素比对');\n      patchElement(n1, n2, container);\n    }\n  }\n  // 判断是不是同一个元素\n  function isSameVnode(n1, n2) {\n    return n1.type == n2.type && n1.key == n2.key;\n  }\n  // 删除\n  function unmount(vnode) {\n    console.log(vnode.el);\n    hostRemove(vnode.el);\n  }\n  //\n  /**\n   * @description: 渲染\n   * @param {*} n1 上一个节点\n   * @param {*} n2 需要渲染的节点\n   * @param {*} container 渲染的目标容器\n   * @return {*}\n   */\n  function patch(n1, n2, container) {\n    // 判断是不是同一个元素\n    if (n1 && !isSameVnode(n1, n2)) {\n      // 不是同一个元素，直接替换\n      unmount(n1); // 删除之前的元素\n      n1 = null;\n    }\n    const { shapeFlag, type } = n2;\n    // 文本\n    switch (type) {\n      case TEXT:\n        // 文本类型\n        processText(n1, n2, container);\n        break;\n\n      default:\n        break;\n    }\n    if (shapeFlag & ShapeFlags.ELEMENT) {\n      console.log('当前渲染的是元素');\n      processeElement(n1, n2, container);\n    } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n      console.log('当前渲染的是组件');\n      processComponent(n1, n2, container);\n    }\n  }\n  /**\n   * @description: 实现渲染，组件初始化\n   * @param {*} vnode 虚拟dom\n   * @param {*} container 容器\n   * @return {*} container\n   */\n  function render(vnode, container) {\n    // 组件初始化\n    // 渲染\n    patch(null, vnode, container);\n  }\n  return {\n    createApp: ApiCreateApp(render) // 创建vnode\n  };\n}\n\n// 组件初始化流程： 将组件变成vnode ==> 创建一个组件实例 ==>再进行渲染vnode ==> 真实dom\n","import { isArray, isObject } from '@vue/shared';\nimport { creatVnode, isVnode } from './vnode';\n\nexport function h(type, propsOrChildren, childen = null) {\n  // 变成vnode\n\n  // h('div',{},'hello')\n  // h('div',{},[h('span')])\n  const i = arguments.length; // 参数个数\n  if (i === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      // h('div',{})\n      // h('div',h('div'))\n      // 判断是不是一个vnode\n      if (isVnode(propsOrChildren)) {\n        return creatVnode(type, null, [propsOrChildren]);\n      }\n      return creatVnode(type, propsOrChildren); // 没有儿子，只有属性\n    } else {\n      return creatVnode(type, null, propsOrChildren); // 是儿子\n    }\n  } else {\n    if (i > 3) {\n      // h('div',{},'1','2')\n      // 超过三个的\n      childen = Array.prototype.slice.call(arguments, 2); // 从第二个开始切割\n    } else if (i === 3 && isVnode(childen)) {\n      childen = [childen]; // h('div',{},h('div'))\n    }\n    return creatVnode(type, propsOrChildren, childen);\n  }\n}\n","// 操作dom的文件\n\nimport { extend } from '@vue/shared';\nimport { nodeOps } from './nodeOps';\nimport { patchProp } from './patchProp';\nimport { createRenderer } from '@vue/runtime-core';\nexport const rendererOptions = extend({ patchProp }, nodeOps);\n\nexport const creatApp = (rootcomponent, rootProps) => {\n  // 平台判断，创建一个渲染器\n  const app = createRenderer(rendererOptions).createApp(rootcomponent, rootProps);\n  const { mount } = app;\n  app.mount = function (container) {\n    // #app\n    // 挂载组件\n    // 1.先清空容器内的内容\n    container = rendererOptions.querySelector(container);\n    container.innerHTML = '';\n    // 将组件的dom元素进行挂载\n    mount(container);\n  };\n  return app;\n};\n\nexport * from '@vue/runtime-core';\n\nexport * from '@vue/reativity'"],"names":[],"mappings":"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"}