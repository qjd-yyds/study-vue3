{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["// 判断是否对象\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\n// 合并对象\nexport const extend = Object.assign;\n\nexport const isArray = Array.isArray;\n\nexport const isFunction = (val) => typeof val === 'function';\n\nexport const isString = (val) => typeof val === 'string';\nexport const isNumber = (val) => typeof val === 'number';\n\n// 判断是否存在属性\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (val: object, key: string | symbol): key is keyof typeof val => hasOwnProperty.call(val, key);\n\n// 判断数组的key是不是整数\nexport const isIntegerKey = (key) => isString(key) && key !== 'NaN' && key[0] !== '-' && '' + parseInt(key, 10) === key;\n\n// 判断两个值是否相同\nexport const hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n","// 操作节点增删改插\nconst doc = (typeof document !== 'undefined' ? document : null) as Document;\nexport const svgNS = 'http://www.w3.org/2000/svg';\nexport const nodeOps = {\n  // 创建元素createElement\n  createElement: (tag, isSVG, is, props): Element => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : undefined);\n\n    if (tag === 'select' && props && props.multiple != null) {\n      (el as HTMLSelectElement).setAttribute('multiple', props.multiple);\n    }\n\n    return el;\n  },\n  // 删除一个元素\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  // 插入\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null); // appendchild\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  // 选择\n  querySelector: (selector) => doc.querySelector(selector),\n  // ==>创建节点文本\n  createText: (text) => doc.createTextNode(text),\n  // 设置文本节点\n  setText: (node, text) => {\n    node.nodeValue = text;\n  }\n};\n","/**\n * @description: 自定义属性\n * @param {*} el 目标元素\n * @param {*} el 属性\n * @param {*} value 设置的值\n */\nexport const patchAttr = (el: Element, key, value) => {\n  if (value == null) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n};\n","/**\n * @description: 处理class\n * @param {Element} el 目标元素\n * @param {*} value class的类名\n * @return {*}\n */\nexport const patchClass = (el: Element, value) => {\n  if (value == null) {\n    value = '';\n  }\n  // 对标签的class赋值，如果有新的覆盖\n  el.className = value;\n};\n","export const PatchEvent = (el, key, nextValue) => {\n  // 1.函数缓存\n  const invokers = el._vei || (el._vei = {});\n  const exists = invokers[key];\n  if (exists && nextValue) {\n    exists.value = nextValue;\n    // 原来有\n  } else {\n    const eventName = key.slice(2).toLowerCase();\n    if (nextValue) {\n      // 1.新的有\n\n      let invoker = (invokers[eventName] = createInvoker(nextValue));\n      el.addEventListener(eventName, invoker);\n    } else {\n      // 2.新的没有\n      el.removeEventListener(eventName, exists);\n      invokers[eventName] = undefined;\n    }\n  }\n};\n\nfunction createInvoker(value) {\n  const invoker = (e) => {\n    invoker.value(e);\n  };\n  invoker.value = value;\n  return invoker;\n}\n\n// 事件处理\n// 1.给元素缓存一个绑定事件的列表\n// 2.如果缓存中没有，但是value有值，绑定事件并且缓存当前事件\n// 3.以前绑定过，删除缓存，讲value缓存\n// 4.两个都有，直接改变invoker里的value\n","/**\n * @description: style的处理\n * @param {*} el 目标元素\n * @param {*} prev 之前的值\n * @param {*} next 修改的值\n */\nexport const patchStyle = (el: Element, prev, next) => {\n  const style = (el as HTMLElement).style;\n  if (next == null) {\n    // 删除\n    el.removeAttribute('style');\n  } else {\n    // 老的有，新的没有\n    if (prev) {\n      for (let key in prev) {\n        if (next[key] == null) {\n          style[key] = '';\n        }\n      }\n    }\n    // 老的没有，新的有\n    for (let key in next) {\n      style[key] = next[key];\n    }\n  }\n};\n","// 属性操作 ，策略模式\nimport { patchAttr } from './modules/attr';\nimport { patchClass } from './modules/class';\nimport { PatchEvent } from './modules/event';\nimport { patchStyle } from './modules/style';\nexport function patchProp(el, key, prevValue, nextValue) {\n  switch (key) {\n    case 'class':\n      patchClass(el, nextValue);\n      break;\n    case 'style':\n      patchStyle(el, prevValue, nextValue);\n      break;\n    default:\n      // 判断是不是事件\n      if (/^on[^a-z]/.test(key)) {\n        // 事件\n        PatchEvent(el, key, nextValue);\n      } else {\n        // 否则为属性\n        patchAttr(el, key, nextValue);\n      }\n\n      break;\n  }\n}\n","// 操作dom的文件\n\nimport { extend } from '@vue/shared';\nimport { nodeOps } from './nodeOps';\nimport { patchProp } from './patchProp';\n\nexport const rendererOptions = extend({ patchProp }, nodeOps);\n"],"names":[],"mappings":"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"}