{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProp.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/render.ts","../src/index.ts"],"sourcesContent":["// 判断是否对象\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\n// 合并对象\nexport const extend = Object.assign;\n\nexport const isArray = Array.isArray;\n\nexport const isFunction = (val) => typeof val === 'function';\n\nexport const isString = (val) => typeof val === 'string';\nexport const isNumber = (val) => typeof val === 'number';\n\n// 判断是否存在属性\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (val: object, key: string | symbol): key is keyof typeof val => hasOwnProperty.call(val, key);\n\n// 判断数组的key是不是整数\nexport const isIntegerKey = (key) => isString(key) && key !== 'NaN' && key[0] !== '-' && '' + parseInt(key, 10) === key;\n\n// 判断两个值是否相同\nexport const hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n\nexport * from './shapeFlags';\n","// 操作节点增删改插\nconst doc = (typeof document !== 'undefined' ? document : null) as Document;\nexport const svgNS = 'http://www.w3.org/2000/svg';\nexport const nodeOps = {\n  // 创建元素createElement\n  createElement: (tag, isSVG, is, props): Element => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : undefined);\n\n    if (tag === 'select' && props && props.multiple != null) {\n      (el as HTMLSelectElement).setAttribute('multiple', props.multiple);\n    }\n\n    return el;\n  },\n  // 删除一个元素\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  // 插入\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null); // appendchild\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  // 选择\n  querySelector: (selector) => doc.querySelector(selector),\n  // ==>创建节点文本\n  createText: (text) => doc.createTextNode(text),\n  // 设置文本节点\n  setText: (node, text) => {\n    node.nodeValue = text;\n  }\n};\n","/**\n * @description: 自定义属性\n * @param {*} el 目标元素\n * @param {*} el 属性\n * @param {*} value 设置的值\n */\nexport const patchAttr = (el: Element, key, value) => {\n  if (value == null) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n};\n","/**\n * @description: 处理class\n * @param {Element} el 目标元素\n * @param {*} value class的类名\n * @return {*}\n */\nexport const patchClass = (el: Element, value) => {\n  if (value == null) {\n    value = '';\n  }\n  // 对标签的class赋值，如果有新的覆盖\n  el.className = value;\n};\n","export const PatchEvent = (el, key, nextValue) => {\n  // 1.函数缓存\n  const invokers = el._vei || (el._vei = {});\n  const exists = invokers[key];\n  if (nextValue && exists) {\n    // 原来有\n    exists.value = nextValue;\n  } else {\n    // 事件名字\n    const eventName = key.slice(2).toLowerCase();\n    if (nextValue) {\n      // 1.新的有\n      let invoker = (invokers[eventName] = createInvoker(nextValue));\n      el.addEventListener(eventName, invoker);\n    } else {\n      // 2.新的没有\n      el.removeEventListener(eventName, exists);\n      invokers[eventName] = undefined;\n    }\n  }\n};\n\nfunction createInvoker(value) {\n  const invoker = (e) => {\n    invoker.value(e);\n  };\n  invoker.value = value;\n  return invoker;\n}\n\n// 事件处理\n// 1.给元素缓存一个绑定事件的列表\n// 2.如果缓存中没有，但是value有值，绑定事件并且缓存当前事件\n// 3.以前绑定过，删除缓存，讲value缓存\n// 4.两个都有，直接改变invoker里的value\n","/**\n * @description: style的处理\n * @param {*} el 目标元素\n * @param {*} prev 之前的值\n * @param {*} next 修改的值\n */\nexport const patchStyle = (el: Element, prev, next) => {\n  const style = (el as HTMLElement).style;\n  if (next == null) {\n    // 删除\n    el.removeAttribute('style');\n  } else {\n    // 老的有，新的没有\n    if (prev) {\n      for (let key in prev) {\n        if (next[key] == null) {\n          style[key] = '';\n        }\n      }\n    }\n    // 老的没有，新的有\n    for (let key in next) {\n      style[key] = next[key];\n    }\n  }\n};\n","// 属性操作 ，策略模式\nimport { patchAttr } from './modules/attr';\nimport { patchClass } from './modules/class';\nimport { PatchEvent } from './modules/event';\nimport { patchStyle } from './modules/style';\nexport function patchProp(el, key, prevValue, nextValue) {\n  switch (key) {\n    case 'class':\n      patchClass(el, nextValue);\n      break;\n    case 'style':\n      patchStyle(el, prevValue, nextValue);\n      break;\n    default:\n      // 判断是不是事件\n      if (/^on[^a-z]/.test(key)) {\n        // 事件\n        PatchEvent(el, key, nextValue);\n      } else {\n        // 否则为属性\n        patchAttr(el, key, nextValue);\n      }\n\n      break;\n  }\n}\n","import { isString, ShapeFlags, isObject, isFunction, isArray } from '@vue/shared';\n\n/**\n * @description: 作用和h函数一样，创建vnode\n * @param {*} type 类型\n * @param {*} props 属性\n * @param {*} childen 插槽\n * @return { vnode } vnode\n */\n// h('div',{},[])\nexport function creatVnode(\n  type,\n  props,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false\n) {\n  // 区分组件的虚拟dom还是普通元素\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : isObject(type)\n    ? ShapeFlags.STATEFUL_COMPONENT\n    : isFunction(type)\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\n    : 0;\n  const vnode = {\n    _v_isVnode: true,\n    type,\n    props,\n    children,\n    key: props && props.key, // diff算法\n    el: null, // 和真实元素和dom对应\n    component: null,\n    shapeFlag // 判断类型\n  };\n  // children\n  normalizeChildren(vnode, children);\n  return vnode;\n}\n\nexport function normalizeChildren(vnode, children) {\n  let type = 0;\n  if (children == null) {\n    return;\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN;\n  } else {\n    type = ShapeFlags.TEXT_CHILDREN;\n  }\n  vnode.shapeFlag = vnode.shapeFlag | type;\n}\n","import { creatVnode } from './vnode';\n\n/**\n * @description: 创建vnode\n * @param {*} render\n * @return {*}\n */\nexport function ApiCreateApp(render) {\n  return function creatApp(rootcomponent, rootProps) {\n    const app = {\n      _component: rootcomponent,\n      _props: rootProps,\n      _container: null,\n      mount(container) {\n        // 创建vnode\n        let vnode = creatVnode(rootcomponent, rootProps);\n        // 渲染\n        render(vnode, container);\n      }\n    };\n    return app;\n  };\n}\n","import { hasOwn } from '@vue/shared';\n\nexport const componentPublicInstance = {\n  get({ _: instance }, key) {\n    const { props, setupState, data } = instance;\n    if (key[0] === '$') {\n      // $开头的不能获取\n      return;\n    }\n    if (hasOwn(props, key)) {\n      return props[key];\n    } else if (hasOwn(setupState, key)) {\n      return setupState[key];\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { props, setupState, data } = instance;\n    if (hasOwn(props, key)) {\n      props[key] = value;\n    } else if (hasOwn(setupState, key)) {\n      setupState[key] = value;\n    }\n  }\n};\n","import { isFunction, isObject, ShapeFlags } from '@vue/shared';\nimport { componentPublicInstance } from './componentPublicInstance';\n// 创建组件实例\nexport const createComponentInstance = (vnode) => {\n  const instance = {\n    vnode,\n    type: vnode.type, // 组件的类型,用户自己写的\n    props: {},\n    attrs: {},\n    data: { a: 1 },\n    render: false,\n    setupState: {}, // setup入口函数的状态\n    ctx: {}, // 代理\n    proxy: {},\n    isMounted: false // 是否挂载\n  };\n  instance.ctx = {\n    _: instance\n  };\n  return instance;\n};\n\n// 解析数据到组件实例\nexport const setupComponent = (instance) => {\n  // 设置值\n  const { props, children } = instance.vnode;\n  instance.props = props;\n  instance.children = children;\n  console.log(children, '==>children');\n  let isStateFul = instance.vnode.shapeFlag && ShapeFlags.STATEFUL_COMPONENT;\n  if (isStateFul) {\n    // 有的话就是有状态的组件\n    setupStateComponent(instance);\n  }\n};\n// 执行setup\nfunction setupStateComponent(instance) {\n  instance.proxy = new Proxy(instance.ctx, componentPublicInstance as any);\n  // setup的返回值，变成render函数的参数this\n  // 获取组件的类型\n  let component = instance.type;\n  let { setup } = component;\n  // 判断组件有没有setup\n  if (setup) {\n    const setupContext = createContext(instance);\n    let setupResult = setup(instance.props, setupContext);\n    // 返回值对象，函数\n    handleSetupResult(instance, setupResult); // 如果是对象，将值放入实例上的setupState，如果函数就是render\n  } else {\n    // setup没有，调用render\n    finishComponentSetup(instance);\n  }\n\n  component.render(instance.proxy);\n}\n// 处理setup的返回结果\nfunction handleSetupResult(instance, setupResult) {\n  if (isFunction(setupResult)) {\n    instance.render = setupResult; // 将setup返回的函数保存到实例上\n    // 函数\n  } else if (isObject(setupResult)) {\n    instance.setupState = setupResult;\n  }\n  // 最终去执行render\n  finishComponentSetup(instance);\n}\n// 处理render\nfunction finishComponentSetup(instance) {\n  let component = instance.type;\n  // 判断setup是否有render\n  if(!instance.render) {\n    // 没有render\n    // 进行模版编译\n    if(!component.render && component.template) {\n      // 模版变 ==>render\n    }\n    // 将实例上的setup放入render里\n    instance.render = component.render;\n  }\n  console.log(instance.render.toString());\n}\n// 创建上下文 ctx\nfunction createContext(instance) {\n  return {\n    attrs: instance.attrs,\n    slot: instance.slots,\n    emit: () => {},\n    expose: () => {}\n  };\n}\nexport const setupRenderEffect = () => {};\n","import { ShapeFlags } from '@vue/shared';\nimport { ApiCreateApp } from './apiCreateApp';\nimport { createComponentInstance, setupComponent, setupRenderEffect } from './component';\n/**\n * @description: 平台判断，创建渲染器\n * @return {Function} createApp 挂载函数\n */\nexport function createRenderer(rendererOptions) {\n  const mountComponent = (initialVNode, container) => {\n    // 组件初始化流程\n    // 1.先有一个组件的对象render（proxy）\n    const instance = (initialVNode.component = createComponentInstance(initialVNode));\n    // 2.解析数据到实例对象\n    setupComponent(instance);\n    // 3.创建effect让render执行\n    setupRenderEffect();\n  };\n  // 组件创建\n  const processComponent = (n1, n2, container) => {\n    if (n1 == null) {\n      // 第一次\n      mountComponent(n2, container);\n    } else {\n      // 更新\n    }\n  };\n  /**\n   * @description: 实现渲染，组件初始化\n   * @param {*} vnode 虚拟dom\n   * @param {*} container 容器\n   * @return {*} container\n   */\n  function render(vnode, container) {\n    // 组件初始化\n    /**\n     * @description: 渲染\n     * @param {*} n1 上一个节点\n     * @param {*} n2 需要渲染的节点\n     * @param {*} container 渲染的目标容器\n     * @return {*}\n     */\n    function patch(n1, n2, container) {\n      const { shapeFlag } = n2;\n      if (shapeFlag & ShapeFlags.ELEMENT) {\n        console.log('元素');\n      } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n        console.log('当前渲染的是组件');\n        processComponent(n1, n2, container);\n      }\n    }\n    // 渲染\n    patch(null, vnode, container);\n  }\n  return {\n    createApp: ApiCreateApp(render) // 创建vnode\n  };\n}\n","// 操作dom的文件\n\nimport { extend } from '@vue/shared';\nimport { nodeOps } from './nodeOps';\nimport { patchProp } from './patchProp';\nimport { createRenderer } from '@vue/runtime-core';\nexport const rendererOptions = extend({ patchProp }, nodeOps);\n\nexport const creatApp = (rootcomponent, rootProps) => {\n  // 平台判断，创建一个渲染器\n  const app = createRenderer(rendererOptions).createApp(rootcomponent, rootProps);\n  const { mount } = app;\n  app.mount = function (container) {\n    // #app\n    // 挂载组件\n    // 1.先清空容器内的内容\n    container = rendererOptions.querySelector(container);\n    container.innerHTML = '';\n    // 将组件的dom元素进行挂载\n    mount(container);\n  };\n  return app;\n};\n"],"names":[],"mappings":"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"}