{"version":3,"file":"runtime-core.global.js","sources":["../../shared/src/index.ts","../../reativity/src/effect.ts","../src/vnode.ts","../src/apiCreateApp.ts","../src/componentPublicInstance.ts","../src/component.ts","../src/render.ts","../src/h.ts"],"sourcesContent":["// 判断是否对象\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\n// 合并对象\nexport const extend = Object.assign;\n\nexport const isArray = Array.isArray;\n\nexport const isFunction = (val) => typeof val === 'function';\n\nexport const isString = (val) => typeof val === 'string';\nexport const isNumber = (val) => typeof val === 'number';\n\n// 判断是否存在属性\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (val: object, key: string | symbol): key is keyof typeof val => hasOwnProperty.call(val, key);\n\n// 判断数组的key是不是整数\nexport const isIntegerKey = (key) => isString(key) && key !== 'NaN' && key[0] !== '-' && '' + parseInt(key, 10) === key;\n\n// 判断两个值是否相同\nexport const hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n\nexport * from './shapeFlags';\n","import { isArray, isIntegerKey } from '@vue/shared';\nimport { TriggerOpTypes } from './operations';\n\nexport function effect(fn, options: any = {}) {\n  const effect = createReactiveEffect(fn, options);\n  // 判断options\n  if (!options.lazy) {\n    console.log('用户没有传递lazy，立即执行一次');\n    effect(); // 默认执行\n  }\n  return effect;\n}\nlet uid = 0; // 记录effect的下标\nlet activeEffect; // 保存当前的effect\nconst effectTrack = []; // 定义一个栈解决嵌套树型结构effect，为了解决当前effect是哪一个\n/*\n[effect1,effect2,effect3]]\neffect(() => {\n  state.name\n  effect(() => {\n    state.age\n    effect(() => {\n      state.a\n    })\n  })\n\n})\n*/\nfunction createReactiveEffect(fn, options) {\n  const effect = function reativeEffect() {\n    if (!effectTrack.includes(effect)) {\n      // 当前创建的effect不存在栈中,创建effect\n      // 没有入栈当前的effect\n      try {\n        // 入栈\n        effectTrack.push(effect);\n        activeEffect = effect;\n        // 响应式effect\n        return fn(); // 执行用户的方法\n      } finally {\n        // 无论是否成功，都执行\n        // 出栈\n        effectTrack.pop();\n        activeEffect = effectTrack[effectTrack.length - 1];\n      }\n    }\n  };\n  effect.id = uid++; // 区别effect\n  effect._isEffect = true; // 区分是否响应\n  effect.raw = fn; // 保存用户方法\n  effect.options = options; // 保存用户配置\n  return effect;\n}\n\n// 收集effect，获取数据的时候触发get 收集effect\nlet targetMap = new WeakMap(); // 创建表\nexport function Track(target, type, key) {\n  console.log('触发收集', '被收集的target==>', target, '被收集的key==>', key);\n  // 1.name ==> effect\n  // key和effect一一对应\n  if (typeof activeEffect === 'undefined') {\n    // 当前对象没有的在effect函数中使用\n    return;\n  }\n  // key===target==属性==>Set[effect,effect]\n  let depMap = targetMap.get(target); //\n  if (!depMap) {\n    targetMap.set(target, (depMap = new Map())); // 添加值\n  }\n  // 当前key\n  let dep = depMap.get(key);\n  // 判断key是否存在，不存在就创建一个set\n  if (!dep) {\n    depMap.set(key, (dep = new Set()));\n  }\n  // 如果当前set不存在当前effect，\n  if (!dep.has(activeEffect)) {\n    // 收集effect，并添加进去\n    dep.add(activeEffect);\n  }\n  console.log('依赖收集完成，当前创建的依赖weakmap==>', targetMap);\n}\n\n// 触发依赖\n// 1.处理对象\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n  // 触发更新\n  const depsMap = targetMap.get(target);\n  // 判断目标对象有没有被收集==> 不是响应的\n  if (!depsMap) return;\n  const effectSet = new Set();\n  // 性能优化如果有多个同时修改一个值，相同就过滤\n  const add = (effectAdd) => {\n    if (effectAdd) {\n      effectAdd.forEach((effect) => {\n        effectSet.add(effect);\n      });\n    }\n  };\n  // 修改数组长度，数组特殊处理\n  if (key === 'length' && isArray(target)) {\n    // proxy在添加数组的时候默认会讲length等属性加入\n    // 在effect中length也被添加依赖\n    // 当用户修改长度，或者修改的下标小于所有数组的下标\n    // 将length和下标的effect放入dep中\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key >= newValue) {\n        add(dep);\n      }\n    });\n  } else {\n    // 可能是对象\n    if (key !== undefined) {\n      // 获取当前key下的effect\n      add(depsMap.get(key));\n    }\n    switch (type) {\n      // 如果是新增属性\n      case TriggerOpTypes.ADD:\n        if (isArray(target) && isIntegerKey(key)) {\n          // 如果是个数组且key为整数，就将length的effect加入依赖\n          add(depsMap.get('length'));\n        }\n    }\n  }\n  // 触发effect方法\n  effectSet.forEach((effect: any) => {\n    if (effect.options.scheduler) {\n      // 当前scheduler存在，effect为computed,effect的副作用放在get里\n      effect.options.scheduler();\n    } else {\n      effect();\n    }\n  });\n  // 执行\n}\n","import { isString, ShapeFlags, isObject, isFunction, isArray } from '@vue/shared';\n\n/**\n * @description: 作用和h函数一样，创建vnode\n * @param {*} type 类型\n * @param {*} props 属性\n * @param {*} childen 插槽\n * @return { vnode } vnode\n */\n// h('div',{},[])\nexport function creatVnode(\n  type,\n  props,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false\n) {\n  // 区分组件的虚拟dom还是普通元素\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : isObject(type)\n    ? ShapeFlags.STATEFUL_COMPONENT\n    : isFunction(type)\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\n    : 0;\n  const vnode = {\n    _v_isVnode: true,\n    type,\n    props,\n    children,\n    key: props && props.key, // diff算法\n    el: null, // 和真实元素和dom对应\n    component: null,\n    shapeFlag // 判断类型\n  };\n  // children\n  normalizeChildren(vnode, children);\n  return vnode;\n}\n\nexport function normalizeChildren(vnode, children) {\n  let type = 0;\n  if (children == null) {\n    return;\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN;\n  } else {\n    type = ShapeFlags.TEXT_CHILDREN;\n  }\n  vnode.shapeFlag = vnode.shapeFlag | type;\n}\n\n// 判断是否是vnode\nexport function isVnode(vnode) {\n  return vnode._v_isVnode;\n}\n","import { creatVnode } from './vnode';\n\n/**\n * @description: 创建vnode\n * @param {*} render\n * @return {*}\n */\nexport function ApiCreateApp(render) {\n  return function creatApp(rootcomponent, rootProps) {\n    const app = {\n      _component: rootcomponent,\n      _props: rootProps,\n      _container: null,\n      mount(container) {\n        // 创建vnode\n        let vnode = creatVnode(rootcomponent, rootProps);\n        // 渲染\n        render(vnode, container);\n      }\n    };\n    return app;\n  };\n}\n","import { hasOwn } from '@vue/shared';\n\nexport const componentPublicInstance = {\n  get({ _: instance }, key) {\n    const { props, setupState, data } = instance;\n    if (key[0] === '$') {\n      // $开头的不能获取\n      return;\n    }\n    if (hasOwn(props, key)) {\n      return props[key];\n    } else if (hasOwn(setupState, key)) {\n      return setupState[key];\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { props, setupState, data } = instance;\n    if (hasOwn(props, key)) {\n      props[key] = value;\n    } else if (hasOwn(setupState, key)) {\n      setupState[key] = value;\n    }\n  }\n};\n","import { isFunction, isObject, ShapeFlags } from '@vue/shared';\nimport { componentPublicInstance } from './componentPublicInstance';\n// 创建组件实例\nexport const createComponentInstance = (vnode) => {\n  const instance = {\n    vnode,\n    type: vnode.type, // 组件的类型,用户自己写的\n    props: {},\n    attrs: {},\n    data: { a: 1 },\n    render: false,\n    setupState: {}, // setup入口函数的状态\n    ctx: {}, // 代理\n    proxy: {},\n    isMounted: false // 是否挂载\n  };\n  instance.ctx = {\n    _: instance\n  };\n  return instance;\n};\n\n// 解析数据到组件实例\nexport const setupComponent = (instance) => {\n  // 设置值\n  const { props, children } = instance.vnode;\n  instance.props = props;\n  instance.children = children;\n  let isStateFul = instance.vnode.shapeFlag && ShapeFlags.STATEFUL_COMPONENT;\n  if (isStateFul) {\n    // 有的话就是有状态的组件\n    setupStateComponent(instance);\n  }\n};\n// 执行setup\nfunction setupStateComponent(instance) {\n  instance.proxy = new Proxy(instance.ctx, componentPublicInstance as any);\n  // setup的返回值，变成render函数的参数this\n  // 获取组件的类型\n  let component = instance.type;\n  let { setup } = component;\n  // 判断组件有没有setup\n  if (setup) {\n    const setupContext = createContext(instance);\n    let setupResult = setup(instance.props, setupContext);\n    // 返回值对象，函数\n    handleSetupResult(instance, setupResult); // 如果是对象，将值放入实例上的setupState，如果函数就是render\n  } else {\n    // setup没有，调用render\n    finishComponentSetup(instance);\n  }\n\n  // component.render(instance.proxy);\n}\n// 处理setup的返回结果\nfunction handleSetupResult(instance, setupResult) {\n  if (isFunction(setupResult)) {\n    instance.render = setupResult; // 将setup返回的函数保存到实例上\n    // 函数\n  } else if (isObject(setupResult)) {\n    instance.setupState = setupResult;\n  }\n  // 最终去执行render\n  finishComponentSetup(instance);\n}\n// 处理render\nfunction finishComponentSetup(instance) {\n  let component = instance.type;\n  // 判断setup是否有render\n  if(!instance.render) {\n    // 没有render\n    // 进行模版编译\n    if(!component.render && component.template) {\n      // 模版变 ==>render\n    }\n    // 将实例上的setup放入render里\n    instance.render = component.render;\n  }\n}\n// 创建上下文 ctx\nfunction createContext(instance) {\n  return {\n    attrs: instance.attrs,\n    slot: instance.slots,\n    emit: () => {},\n    expose: () => {}\n  };\n}","import { effect } from '@vue/reativity';\nimport { ShapeFlags } from '@vue/shared';\nimport { ApiCreateApp } from './apiCreateApp';\nimport { createComponentInstance, setupComponent } from './component';\n/**\n * @description: 平台判断，创建渲染器\n * @return {Function} createApp 挂载函数\n */\nexport function createRenderer(rendererOptions) {\n  function setupRenderEffect(instance) {\n    // effect 创建effect\n    effect(function componentEffect() {\n      // 判断是不是第一次加载\n      if (!instance.isMounted) {\n        // 获取render的返回值\n        const proxy = instance.proxy;\n        // 执行render\n        instance.render.call(proxy, proxy);\n      }\n    });\n  }\n\n  const mountComponent = (initialVNode, container) => {\n    // 组件初始化流程\n    // 1.先有一个组件的对象render（proxy）\n    const instance = (initialVNode.component = createComponentInstance(initialVNode));\n    // 2.解析数据到实例对象\n    setupComponent(instance);\n    // 3.创建effect让render执行\n    setupRenderEffect(instance);\n  };\n  // 组件创建\n  const processComponent = (n1, n2, container) => {\n    if (n1 == null) {\n      // 第一次\n      mountComponent(n2, container);\n    } else {\n      // 更新\n    }\n  };\n  /**\n   * @description: 实现渲染，组件初始化\n   * @param {*} vnode 虚拟dom\n   * @param {*} container 容器\n   * @return {*} container\n   */\n  function render(vnode, container) {\n    // 组件初始化\n    /**\n     * @description: 渲染\n     * @param {*} n1 上一个节点\n     * @param {*} n2 需要渲染的节点\n     * @param {*} container 渲染的目标容器\n     * @return {*}\n     */\n    function patch(n1, n2, container) {\n      const { shapeFlag } = n2;\n      if (shapeFlag & ShapeFlags.ELEMENT) {\n        console.log('元素');\n      } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n        console.log('当前渲染的是组件');\n        processComponent(n1, n2, container);\n      }\n    }\n    // 渲染\n    patch(null, vnode, container);\n  }\n  return {\n    createApp: ApiCreateApp(render) // 创建vnode\n  };\n}\n","import { isArray, isObject } from '@vue/shared';\nimport { creatVnode, isVnode } from './vnode';\n\nexport function h(type, propsOrChildren, childen = null) {\n  // 变成vnode\n\n  // h('div',{},'hello')\n  // h('div',{},[h('span')])\n  const i = arguments.length; // 参数个数\n  if (i === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      // h('div',{})\n      // h('div',h('div'))\n      // 判断是不是一个vnode\n      if (isVnode(propsOrChildren)) {\n        return creatVnode(type, null, [propsOrChildren]);\n      }\n      return creatVnode(type, propsOrChildren); // 没有儿子\n    } else {\n      return creatVnode(type, null, propsOrChildren); // 是儿子\n    }\n  } else {\n    if (i > 3) {\n      // h('div',{},'1','2')\n      // 超过三个的\n      childen = Array.prototype.slice.call(arguments, 2); // 从第二个开始切割\n    } else if (i === 3 && isVnode(childen)) {\n      childen = [childen]; // h('div',{},h('div'))\n    }\n    return creatVnode(type, propsOrChildren, childen);\n  }\n}\n"],"names":[],"mappings":"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"}